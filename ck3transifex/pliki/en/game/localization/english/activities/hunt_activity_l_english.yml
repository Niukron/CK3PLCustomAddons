l_english:
 activity_invite_rule_hunters: "Court Hunters"
 activity_invite_rule_glory_hounds: "Glory Hound Vassals"
 activity_window_character_animal_slayer: "Beast Slayer\n[Character.GetShortUINameNoTooltip|U]"
 activity_window_character_master_of_hunt: "$master_of_hunt_court_position$\n[Character.GetShortUINameNoTooltip|U]"
 activity_window_character_hunter: "Hunter\n[Character.GetShortUINameNoTooltip|U]"
 standard_header: "$hunt_type_standard$:"
 legendary_header: "$hunt_type_legendary$:"
 falconry_header: "$hunt_type_falconry$:"
 activity_hunt_destination_selection: "Some ground is more suitable for hunting than others; the [hunt_success_chance_no_prefix|E] will be higher in provinces which are wild, remote, have recent [hunt_sightings_no_prefix|E], or have special [buildings|E]."
 hunt_success_bar: "[hunt_success_chance_no_prefix|E]: [Activity.MakeScope.Var( 'hunt_success_chance' ).GetValue|V1]%#!"
 hunt_cannot_hunt_parameter_tt: "[culture|E] is unable to Hunt"
 activity_hunt_province_desc: "You hold a Hunt in [ROOT.Province.GetName]\nVarious factors influence [hunt_success_chance|E]\n"
 activity_hunt_province_desc_standard_sighting: "#P +++ [ROOT.Province.GetTitle.GetDeJureLiege.Custom('GetAnimalType')|U] Sighting#!\n"
 activity_hunt_province_desc_dangerous_sighting: "#P +++ [ROOT.Province.GetTitle.GetDeJureLiege.Custom('GetAnimalType')|U] Sighting#!\n"
 activity_hunt_province_desc_falconry_sighting: "#P +++ [ROOT.Province.GetTitle.GetDeJureLiege.Custom('GetAnimalType')|U] Sighting#!\n"
 activity_hunt_province_desc_terrain_great: "#P ++ [ROOT.Province.GetTerrain.GetNameNoTooltip]#! ([terrain|E])\n"
 activity_hunt_province_desc_terrain_good: "#P + [ROOT.Province.GetTerrain.GetNameNoTooltip]#! ([terrain|E])\n"
 activity_hunt_province_desc_terrain_bad: "#N - [ROOT.Province.GetTerrain.GetNameNoTooltip]#! ([terrain|E])\n"
 activity_hunt_province_desc_terrain_terrible: "#N -- [ROOT.Province.GetTerrain.GetNameNoTooltip]#! ([terrain|E])\n"
 activity_hunt_province_desc_mismanaged_game: "#N - [GetModifier('hunt_mismanaged_game_modifier').GetName]#!"
 activity_hunt_province_desc_punished_poachers: "#P + [GetModifier('hunt_punished_locals_modifier').GetName]#!"
 activity_hunt_province_desc_abundant_game: "#P + [GetModifier('ep3_abundant_game_modifier').GetName]#!"
 activity_hunt_province_desc_no_holding: "#P + No [holding|P]#!\n"
 activity_hunt_province_desc_hunting_grounds_minor: "#P + $building_type_hunting_grounds_01$#! ([building|E])\n"
 activity_hunt_province_desc_hunting_grounds_medium: "#P ++ $building_type_hunting_grounds_01$#! ([building|E])\n"
 activity_hunt_province_desc_hunting_grounds_major: "#P +++ $building_type_hunting_grounds_01$#! ([building|E])\n"
 activity_hunt_province_desc_rainbow_mountains_major: "#P +++ $building_type_rainbow_mountains_01$#! ([building|E])\n"
 activity_hunt_province_desc_logging_camps_minor: "#N - $building_type_logging_camps_01$#! ([building|E])\n"
 activity_hunt_province_desc_logging_camps_medium: "#N -- $building_type_logging_camps_01$#! ([building|E])\n"
 activity_hunt_province_desc_logging_camps_major: "#N --- $building_type_logging_camps_01$#! ([building|E])\n"
 activity_hunt_province_desc_royal_forest_minor: "#P + $building_type_royal_forest_01$#! ([building|E])\n"
 activity_hunt_province_desc_royal_forest_medium: "#P ++ $building_type_royal_forest_01$#! ([building|E])\n"
 activity_hunt_province_desc_royal_forest_major: "#P +++ $building_type_royal_forest_01$#! ([building|E])\n"
 activity_hunt_province_desc_development: "#N - High Development#!\n"
 activity_hunt_province_desc_development_bad: "#N -- High Development#!\n"
 activity_hunt_province_desc_development_terrible: "#N --- High Development#!\n"
 activity_hunt_province_desc_recent_hunt_major: "#N --- Recently Held Hunts#!\n"
 activity_hunt_province_desc_recent_hunt_medium: "#N -- Recently Held Hunts#!\n"
 activity_hunt_province_desc_recent_hunt_minor: "#N - Recently Held Hunt#!\n"
 activity_hunt_province_desc_wild_predators: "#N - [GetModifier('ep3_wild_predators_modifier').GetName]#!"
 activity_hunt_province_desc_culture: "#P + [ROOT.Province.GetTerrain.GetNameNoTooltip]#! ([culture_traditions|E])\n"
 activity_hunt_host_desc_piety: "$BULLET_WITH_TAB$Participants may gain [piety_i|E][piety|E]\n$BULLET_WITH_TAB$Participants may lose [stress_loss_i][stress|E]\n"
 activity_hunt_host_desc_prestige: "$BULLET_WITH_TAB$Participants may gain [prestige_i|E][prestige|E]\n$BULLET_WITH_TAB$Participants may gain [legitimacy_i] [legitimacy|E]\n$BULLET_WITH_TAB$Participants may lose [stress_loss_i][stress|E]\n"
 activity_hunt_host_desc_trait_xp: "$BULLET_WITH_TAB$Participants may gain [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )] [trait_level_track_xp|E]\n"
 activity_hunt_host_desc_trait: "$BULLET_WITH_TAB$Participants may gain the [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )] [trait|E]\n"
 activity_hunt_host_desc: "$BULLET_WITH_TAB$May gain[GetVassalStance( 'glory_hound' ).GetTextIcon][GetVassalStance( 'glory_hound' ).GetName] [vassal|E] [opinion|E]\n$BULLET_WITH_TAB$May gain Trophy [artifacts|E]\n"
 activity_legend_seed_tt: "$BULLET_WITH_TAB$May gain a [legend_seed|E]\n"
 activity_hunt_guest_desc_accolade: "$BULLET_WITH_TAB$Participating [acclaimed_knights|E] may gain [glory|E]\n"
 activity_hunt_host_desc_animal: "\nQuarry [hunt_danger_no_prefix|E]/Rarity Rewards:\n$BULLET_WITH_TAB$[prestige_i|E][prestige|E]\n$BULLET_WITH_TAB$Trophy [artifacts|E]"
 activity_hunt_host_desc_moh: "\n@warning_icon! #negative_value You are not employing a [GetCourtPositionType('master_of_hunt_court_position').GetName()]"
 activity_hunt_host_desc_huntsperson: "\n@warning_icon! #negative_value You are not employing a [GetCourtPositionType('huntperson_camp_officer').GetName()]"
 activity_hunt_host_desc_recent: "\n@warning_icon! #negative_value All held [counties|E] have recently hosted a [GetActivityType('activity_hunt').GetName]"
 activity_hunt_conclusion_desc_legendary_success: "The hunt for the fabled [activity.Custom('GetLegendaryColor')] [activity.Custom('GetAnimalType')] is at last complete! Songs will be sung of this day, and the talents required to lay low such a beast!"
 activity_hunt_conclusion_desc_legendary: "The hunt for the elusive [activity.Custom('GetLegendaryColor')|] [activity.Custom('GetAnimalType')] continues, with no end yet in sight..."
 activity_hunt_conclusion_desc_falconry_success: "The [activity.Custom('GetRaptorPlural')] have done us proud in their hunt for [activity.Custom('GetAnimalPlural')]!"
 activity_hunt_conclusion_desc_falconry: "The [activity.Custom('GetRaptorPlural')] were not successful in their hunt for [activity.Custom('GetAnimalPlural')]..."
 activity_hunt_conclusion_desc_standard_success: "We return home from the [activity.Custom('GetAnimalPlural')] hunt in glory!"
 activity_hunt_conclusion_desc_standard: "Our hunt for [activity.Custom('GetAnimalPlural')] was not successful this time..."
 activity_hunt_guest_help_text: "[activity_guests|E] will have opportunities to socialize, and, if actively participating, improve their hunting and martial abilities.\n[GetVassalStance( 'glory_hound' ).GetTextIcon][GetVassalStance( 'glory_hound' ).GetName] [vassals|E] appreciate the sport and will gain [opinion|E].\n$activity_hunt_guest_help_text_party_size$."
 activity_hunt_guest_help_text_party_size: "Each attending [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )] will slightly increase the [hunt_success_chance_no_prefix|E]"
 hunt_type_stress: "$BULLET_WITH_TAB$@stress_icon! Stress Loss"
 hunt_type_safety: "$BULLET_WITH_TAB$@death_icon! Safety"
 hunt_type_skill_prowess: "$BULLET_WITH_TAB$@skill_prowess_icon! Prowess"
 hunt_type_skill_stewardship: "$BULLET_WITH_TAB$@skill_stewardship_icon! Stewardship"
 hunt_type_skill_learning: "$BULLET_WITH_TAB$@skill_learning_icon! Learning"
 hunt_phase: "Hunt"
 hunt_type_standard: "Hunt"
 hunt_type_standard_desc: "$EFFECT_LIST_BULLET$ Choose a quarry from a variety of local animals\n$EFFECT_LIST_BULLET$ Increases $trait_track_hunter$ [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )] [trait_level_track_xp|E]\n$EFFECT_LIST_BULLET$ Higher [hunt_danger_no_prefix|E] grants more [prestige_i|E][prestige|E]\n$EFFECT_LIST_BULLET$ Martial sexes may actively participate\n$EFFECT_LIST_BULLET$ Non-martial sexes may spectate\n#weak Proud and cunning beasts stalk the wilderness; outwitting and overcoming them tests valor and hones skills.#!"
 hunt_type_legendary: "Legendary"
 hunt_type_legendary_desc: "$EFFECT_LIST_BULLET$ Seek a mythical animal sighted in the area\n$EFFECT_LIST_BULLET$ Increases $trait_track_hunter$ [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )] [trait_level_track_xp|E]\n$EFFECT_LIST_BULLET$ Higher [hunt_danger_no_prefix|E] grants more [prestige_i|E][prestige|E]\n$EFFECT_LIST_BULLET$ Martial sexes may participate\n$EFFECT_LIST_BULLET$ Non-martial sexes may spectate\n#weak Mythical creatures are often dismissed by the learned as legend, but the forests may yet hold much mystery.#!"
 hunt_type_falconry: "Falconry"
 hunt_type_falconry_desc: "$EFFECT_LIST_BULLET$ Choose a quarry from a variety of game birds\n$EFFECT_LIST_BULLET$ Increases $trait_track_falconer$ [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )] [trait_level_track_xp|E]\n$EFFECT_LIST_BULLET$ Both sexes may participate\n#weak Though costly, hawking and falconry provide a joy in the mastery of nature beyond compare among the noble pursuits.#!"
 hunt_option_attendants: "Attendants"
 hunt_attendants_few: "Local Gamekeepers"
 hunt_attendants_few_desc: "#weak A small group of attendant hunters are assisted by local game wardens.#!"
 hunt_attendants_normal: "Search Parties"
 hunt_attendants_normal_desc: "$BULLET_WITH_TAB$Increases [hunt_success_chance_no_prefix|E] somewhat$hunt_attendants_roco_tt$\n\n#weak Groups of servants aid in finding and cornering the game.#!"
 hunt_attendants_many: "Flushing Gangs"
 hunt_attendants_many_desc: "$BULLET_WITH_TAB$Increases [hunt_success_chance_no_prefix|E] markedly$hunt_attendants_roco_tt$\n\n#weak Dedicated groups of hunters are ready to pursue and direct game.#!"
 hunt_option_party_size: "Party Size"
 hunt_party_size_few: "Intimate Party"
 hunt_party_size_few_desc: "$BULLET_WITH_TAB$Your [GetPlayer.Custom('GetHuntMasterTooltipDesc')], [GetCourtPositionType('bodyguard_court_position').GetName()], [GetCourtPositionType('court_physician_court_position').GetName()], [spouses|E], [friends|E], [lovers|E], and Hunters join\n\n#weak A small band of trusted confidants and courtiers.#!"
 hunt_party_size_normal: "Reasonable Party"
 hunt_party_size_normal_desc: "$BULLET_WITH_TAB$More [prestige_i|E][prestige|E] on completion\n$BULLET_WITH_TAB$Unlanded $knight_culture_player_plural$ and [GetTrait('lazy').GetName( GetNullCharacter )] or martially educated [courtiers|E] and [guests|E] join\n\n#weak A decent group of notables and courtiers of the realm.#!"
 hunt_party_size_many: "Substantial Party"
 hunt_party_size_many_desc: "$BULLET_WITH_TAB$Much more [prestige_i|E][prestige|E] on completion\n$BULLET_WITH_TAB$All [courtiers|E] and [guests|E] join\n\n#weak An extensive slice of the court, realm, and its environs.#!"
 hunt_activity_master_of_hunt_appointed: "$master_of_hunt_court_position$ Appointed"
 hunt_attendants_roco_tt: "[SelectLocalization( HasDlcFeature( 'royal_court' ), 'hunt_attendants_roco_tt_ROCO_DLC', 'hunt_attendants_roco_tt_NO_ROCO_DLC' )]"
 hunt_attendants_roco_tt_ROCO_DLC: "\n$BULLET_WITH_TAB$Effect increases with $court_servants$ [court_amenities|E]"
 hunt_attendants_roco_tt_NO_ROCO_DLC: ""
 artifact_animal_trinket_name: "[owner.Custom('GetAnimalType')|U] [newly_created_artifact.Custom('ArtifactAnimalTrinketType')|U]"
 artifact_animal_trinket_description: "The [newly_created_artifact.Custom('ArtifactAnimalTrinketType')] of a [owner.Custom('GetAnimalType')] hunted by [creator.GetName] in [location.GetBaronyNameExplicitly]."
 artifact_animal_trinket: "Animal Trinket"
 hunt_revenge_skull_name_1: "[host.GetTitledFirstNamePossessiveNoTooltip] Bane"
 hunt_revenge_skull_name_2: "[host.GetTitleAsNamePossessiveNoTooltip] Bane"
 hunt_revenge_skull_name_3: "[host.GetTitleAsNameNoTooltip] Slayer"
 hunt_revenge_skull_desc: "The head of [newly_created_artifact.GetFeatureText( 'animal_skull_type' )] which killed [host.GetTitledFirstName] while hunting, requested by [host.GetHerHis] heir, [creator.GetTitledFirstName]. It is [SCOPE.Custom('ArtifactAdverbQuality')] preserved and attached to a [SCOPE.Custom('ArtifactAdverbWealth')] carved [newly_created_artifact.GetFeatureText( 'generic_material_wood' )] mount."
 hunt_rampage_trinket_slain_desc: "The [newly_created_artifact.Custom('ArtifactAnimalTrinketType')] of a rampaging [activity.Custom('GetAnimalTypeKill')] which attacked [host.GetName] and [similar_participant.GetName] in [creator.GetCurrentLocation.GetBaronyNameExplicitly], felled by [animal_slayer.GetFirstNamePossessive] knife."
 hunt_rampage_trinket_wound_desc: "The [newly_created_artifact.Custom('ArtifactAnimalTrinketType')] of a rampaging [activity.Custom('GetAnimalTypeKill')] which attacked [host.GetName] and [similar_participant.GetName] in [creator.GetCurrentLocation.GetBaronyNameExplicitly], wounding [animal_slayer.GetFirstName] as [animal_slayer.GetSheHe] slew it."
 hunt_rampage_trinket_death_desc: "The [newly_created_artifact.Custom('ArtifactAnimalTrinketType')] of a rampaging [activity.Custom('GetAnimalTypeKill')] which attacked [host.GetName] and [similar_participant.GetName] in [creator.GetCurrentLocation.GetBaronyNameExplicitly], killing [animal_slayer.GetFirstName] as [animal_slayer.GetSheHe] slew it."
 feature_animal_trinket_type_antler: "antler"
 feature_animal_trinket_type_horn: "horn"
 feature_animal_trinket_type_tusk: "tusk"
 feature_animal_trinket_type_claws: "claws"
 feature_animal_trinket_type_fangs: "fangs"
 feature_animal_trinket_type_tail: "tail"
 feature_animal_trinket_type_foot: "foot"
 artifact_animal_wild: "Wild"
 artifact_animal_beastly: "Beastly"
 artifact_bird_feather_name: "[owner.Custom('GetAnimalType')|U] Feather"
 artifact_bird_feather_description: "The feather of a [owner.Custom('GetAnimalType')] hunted in [location.GetBaronyNameExplicitly] by [creator.GetTitledFirstNamePossessive] [creator.GetInvolvedActivity.Custom('GetRaptorType')]."
 artifact_bird_feather_raptor_description: "The feather of [owner.GetTitledFirstNamePossessive] [owner.GetInvolvedActivity.Custom('GetRaptorType')], felled by a larger raptor while hunting in [location.GetBaronyNameExplicitly]."
 feature_bird_feather_type_feather: "feather"
 artifact_bird_feather: "Feather"
 slay_beast_intent: "Slay Beast"
 slay_beast_intent_desc: "You just want a good hunt, and to be the one who brings down the quarry."
 I_AM_REMOVED_FROM_ACTIVITY: "You are removed from the Activity"
 CHARACTER_IS_REMOVED_FROM_ACTIVITY: "Removes [CHARACTER.GetShortUIName] from the Activity"
 GLOBAL_IS_REMOVED_FROM_ACTIVITY: "Removes [CHARACTER.GetShortUIName] from the Activity"
 I_AM_REMOVED_FROM_ACTIVITY_PAST: "I was removed from the Activity"
 CHARACTER_IS_REMOVED_FROM_ACTIVITY_PAST: "Removed [CHARACTER.GetShortUIName] from the Activity"
 GLOBAL_IS_REMOVED_FROM_ACTIVITY_PAST: "[CHARACTER.GetShortUIName] was removed from the Activity"
 hunt_success_chance: "[hunt_success_chance_no_prefix|E]"
 hunt_base_cost: "Base Cost"
 hunt_activity_every_brave_participant_tt: "All non-[GetTrait('craven').GetName( GetNullCharacter )] Attendees:"
 hunt_activity_every_craven_participant_tt: "All [GetTrait('craven').GetName( GetNullCharacter )] Attendees:"
 hunt.hide_tt: "Will receive a [activity.Custom('GetAnimalType')] hide [court_artifact|E]"
 hunt.skull_tt: "Will receive a [activity.Custom('GetAnimalType')] skull [court_artifact|E]"
 hunt.trinket_tt: "Will receive a [activity.Custom('GetAnimalType')] trinket [artifact|E]"
 hunt_location_no_game_tt: "There is no suitable game in this county"
 activity_every_attendee_tt: "All [activity.GetShortName] Attendees"
 hunt_every_hunter_attendee_tt: "Every attending [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )]"
 every_other_attendee_tt: "Every other [activity_guest|E]"
 hunt_ends_tt: "The [GetActivityType('activity_hunt').GetName] ends"
 hunt_success_tt: "The [activity.GetShortName] #positive_value succeeds#!"
 hunt_fails_tt: "The [activity.GetShortName] #X fails#! (#weak [hunt_success_chance_no_prefix|E]: [activity.MakeScope.Var('hunt_success_chance').GetValue|1]%)#!"
 hunt_activity_chase_tt: "[host.GetShortUIName|U] will attempt to #V corner#! the [activity.Custom('GetAnimalType')] #weak (Spear)#!\n@warning_icon! #X This method is more [hunt_dangerous|E]#!"
 hunt_activity_ambush_tt: "[host.GetShortUIName|U] will attempt to #V ambush#! the [activity.Custom('GetAnimalType')] #weak (Bow)#!"
 hunt_activity_stealth_tt: "[host.GetShortUIName|U] will attempt to #V surprise#! the [activity.Custom('GetAnimalType')] #weak (Bow)#!"
 hunt_activity_captive_tt: "[host.GetShortUIName|U] will attempt to release and slay your #V captive#! [activity.Custom('GetAnimalType')] #weak (Spear)#!\n@warning_icon! #X This method is [hunt_dangerous|E]#!"
 hunt_activity_falconry_tt: "You will attempt to #V hawk#! a [activity.Custom('GetAnimalType')] #weak (Raptor)#!"
 hunt_activity_success_increase_minor_tt: "[hunt_success_chance_no_prefix|E] #positive_value increases slightly#!"
 hunt_activity_success_increase_medium_tt: "[hunt_success_chance_no_prefix|E] #positive_value increases#!"
 hunt_activity_success_increase_major_tt: "[hunt_success_chance_no_prefix|E] #positive_value increases greatly#!"
 hunt_activity_success_increase_massive_tt: "[hunt_success_chance_no_prefix|E] #positive_value increases tremendously#!"
 hunt_activity_success_increase_adventurer_initial_medium_tt: "[hunt_success_chance_no_prefix|E] #positive_value increases greatly#!"
 hunt_activity_success_increase_adventurer_initial_high_tt: "[hunt_success_chance_no_prefix|E] #positive_value increases tremendously#!"
 hunt_activity_success_decrease_minor_tt: "[hunt_success_chance_no_prefix|E] #negative_value decreases slightly#!"
 hunt_activity_success_decrease_medium_tt: "[hunt_success_chance_no_prefix|E] #negative_value decreases#!"
 hunt_activity_success_decrease_major_tt: "[hunt_success_chance_no_prefix|E] #negative_value decreases greatly#!"
 hunt_seek_current_tt: "[host.GetShortUIName|U] will seek the [activity.Custom('GetAnimalType')|V]:\n[activity.Custom('ActivityAnimalSafety')]\n[activity.Custom('ActivityAnimalPrestige')]"
 hunt_seek_current_legendary_tt: "[host.GetShortUIName|U] will seek the [activity.Custom('GetLegendaryColor')|V] [activity.Custom('GetAnimalType')|V]:\n[activity.Custom('ActivityAnimalSafety')]\n[activity.Custom('ActivityAnimalPrestige')]"
 hunt_seek_current_falconry_tt: "[host.GetShortUIName|U] will seek to #V hawk#! a [activity.Custom('GetAnimalType')|V]:\n[activity.Custom('ActivityAnimalPrestige')]"
 hunt_seek_waterfowl_falconry_tt: "[host.GetShortUIName|U] will seek to #V hawk#! a [activity.Custom('GetAnimalTypeWaterfowl')|V]:\n[activity.Custom('ActivityAnimalPrestige')]"
 hunt_seek_gamebird_falconry_tt: "[host.GetShortUIName|U] will seek to #V hawk#! a [activity.Custom('GetAnimalTypeGamebird')|V]:\n[activity.Custom('ActivityAnimalPrestige')]"
 hunt_seek_fox_tt: "You will seek a #V $animal_type_fox$#!:\n$hunt_animal_safety_safer$\n$hunt_animal_prestige_lowest$"
 hunt_seek_hare_tt: "You will seek a #V $animal_type_hare$#!:\n$hunt_animal_safety_safest$\n$hunt_animal_prestige_lowest$"
 hunt_seek_buck_tt: "You will seek a [host.Custom('GetRegionalDeerType')|V]:\n$hunt_animal_safety_middling$\n$hunt_animal_prestige_middling$"
 hunt_seek_wolf_tt: "You will seek a [THIS.Char.Custom('GetRegionalWolfType')|V]:\n$hunt_animal_safety_middling$\n$hunt_animal_prestige_middling$"
 hunt_seek_boar_tt: "You will seek a #V $animal_type_boar$#!:\n$hunt_animal_safety_dangerous$\n$hunt_animal_prestige_high$"
 hunt_seek_hare_falconry_tt: "You will seek to #V hawk#! a #V hare#!:\n$hunt_animal_prestige_middling$"
 hunt_modifier_success_slightly_improved_location_tt: "While this modifier is active, your [hunt_success_chance|E] will be #positive_value slightly better#! in this [county|E]"
 hunt_modifier_success_slightly_improved_tt: "While this modifier is active, your [hunt_success_chance|E] will be #positive_value slightly improved#!"
 hunt_modifier_success_slightly_worse_tt: "While this modifier is active, your [hunt_success_chance|E] will be #negative_value slightly worse#!"
 hunt_pelt_damaged_tt: "Pelt trophy [artifact|E] will #negative_value not#! be available"
 hunt_no_antlers_tt: "[activity.Custom('GetAnimalType')|U] Antlers trophy [artifact|E] will #negative_value not#! be available"
 hunt_skull_damaged_tt: "[activity.Custom('GetAnimalType')|U] Skull trophy [court_artifact|E] will #negative_value not#! be available"
 hunt_female_quarry_tt: "Hunt will award #negative_value half#! [prestige_i|E][prestige|E]"
 hunt_female_quarry_piety_tt: "Hunt will award #negative_value half#! [piety_i|E][piety|E]"
 hunt_no_artifact_tt: "Trophies will #negative_value not#! be available"
 hunt_random_attendee_injured_tt: "@death_icon!A random Participant is injured"
 hunt_random_attendee_killed_tt: "@death_icon!A random Participant dies"
 hunt_target_attendee_injured_tt: "[murder_target.GetShortUIName] is [GetTrait('wounded_1').GetName( GetNullCharacter )]"
 hunt_target_attendee_injured_chance_tt: "[murder_target.GetShortUIName] may be injured"
 hunt_target_attendee_killed_tt: "@death_icon![murder_target.GetShortUIName] dies"
 hunt_murder_involvement_discovered_tt: "@warning_icon! #X Your involvement may be discovered#!"
 hunt_every_hunter_tt: "Every Participant"
 hunt_every_slay_beast_hunter_tt: "Every Participant with the $slay_beast_intent$ [intent|E]"
 hunt_every_other_hunter_tt: "Every Participating Guest"
 hunt_progress_towards_trait_0_tt: "[THIS.Char.GetShortUINameNoFormat|U] may adopt the [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )] [lifestyle_trait|E]"
 hunt_progress_towards_trait_1_tt: "Slightly increases [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )] [trait_level_track_xp|E]"
 hunt_progress_towards_trait_2_tt: "Increases [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )] [trait_level_track_xp|E]"
 hunt_progress_towards_trait_3_tt: "Greatly increases [GetTrait('lifestyle_hunter').GetName( GetNullCharacter )] [trait_level_track_xp|E]"
 every_non_cynical_dharmic_attendee_tt: "Non-[GetTrait('cynical').GetName( GetNullCharacter )] [GetFaithDoctrine('tenet_dharmic_pacifism').GetBaseName] [faith|E] attendees"
 every_non_cynical_dharmic_attendee_reverse_tt: "Other attendees"
 hunter_xp_gain_message: "[GetTrait('lifestyle_hunter').GetName( GetNullCharacter )] Experience"
 hunter_prestige_gain_message: "Hunted [activity.Custom('GetAnimalType')|U]"
 hunter_accident_victim_family_tt: "[murder_target.GetShortUINamePossessive] [family|E]"
 hunt_animal_safety_safest: "@death_icon![hunt_danger_no_prefix|E]: #P Harmless#! #weak (1/5)#!"
 hunt_animal_safety_safer: "@death_icon![hunt_danger_no_prefix|E]: #P Mild#! #weak (2/5)#!"
 hunt_animal_safety_middling: "@death_icon![hunt_danger_no_prefix|E]: Middling #weak (3/5)#!"
 hunt_animal_safety_dangerous: "@death_icon![hunt_danger_no_prefix|E]: #N Dangerous#! #weak (4/5)#!"
 hunt_animal_safety_treacherous: "@death_icon![hunt_danger_no_prefix|E]: #N Treacherous#! #weak (5/5)#!"
 hunt_animal_prestige_lowest: "[prestige_i|E][prestige|E]: #N Trivial#! #weak (1/5)#!"
 hunt_animal_prestige_lower: "[prestige_i|E][prestige|E]: #N Mediocre#! #weak (2/5)#!"
 hunt_animal_prestige_middling: "[prestige_i|E][prestige|E]: Middling #weak (3/5)#!"
 hunt_animal_prestige_high: "[prestige_i|E][prestige|E]: #P Impressive#! #weak (4/5)#!"
 hunt_animal_prestige_highest: "[prestige_i|E][prestige|E]: #P Glorious#! #weak (5/5)#!"
 hunt_increases_safety_tt: "#D Increases safety#!"
 hunt_character_wound_tt: "@warning_icon!May be seriously injured"
 hunt_attempted_accident_murder_tt: "@warning_icon! #X People are more cautious after the last \"hunting accident\"#!"
 hunt_any_county_legendary_sighting_tt: "Requires a [GetModifier('hunt_sighting_legendary_modifier').GetNameWithTooltip] reported in your [realm|E]"
 hunt_start_health_tt: "Your [health|E] is too low"
 hunt_captive_animal_tt: "[host.GetShortUIName|U] will hunt a captive [host.Custom('GetAnimalTypeCaptive')|V]"
 hunt_every_attempted_murderer_tt: "Against each murderer, you"
 activity_hunt_location_legendary_sighting_tt: "[county|E] must have a [GetModifier('hunt_sighting_legendary_modifier').GetNameWithTooltip]"
 activity_hunt_location_any_game_tt: "Location must have some hunting game"
 activity_hunt_selection_tooltip: "Hunt wild game with your court, for sport and glory\n\nAnticipated Rewards:\n$BULLET_WITH_TAB$[prestige_i] [prestige|E]\n$BULLET_WITH_TAB$[legitimacy_i] [legitimacy|E] Gain\n$BULLET_WITH_TAB$[stress_loss_i] [stress|E] Loss"
 hunt_kill_success_melee_root: "You slay the [activity.Custom('GetAnimalTypeKill')]"
 hunt_kill_success_melee_guest: "[animal_slayer.GetFirstNameNoTooltip] slays the [activity.Custom('GetAnimalTypeKill')]"
 hunt_kill_failure_melee_root: "You are wounded by the [activity.Custom('GetAnimalTypeKill')]"
 hunt_kill_failure_melee_guest: "[animal_slayer.GetFirstNameNoTooltip] is wounded by the [activity.Custom('GetAnimalTypeKill')]"
 hunt_kill_critical_failure_melee_root: "You are killed by the [activity.Custom('GetAnimalTypeKill')]"
 hunt_kill_critical_failure_melee_guest: "[animal_slayer.GetFirstNameNoTooltip] is killed by the [activity.Custom('GetAnimalTypeKill')]"
 hunt_kill_success_melee: "The beast is slain"
 hunt_kill_success_capture: "The beast is captured"
 hunt_kill_failure_melee: "...but wounds [THIS.Char.GetFirstNameOrMeNoTooltip]"
 hunt_kill_critical_failure_melee: "...but kills [THIS.Char.GetFirstNameOrMeNoTooltip]"
 hunt_kill_failure_melee_group: "...but wounds someone"
 hunt_kill_critical_failure_melee_group: "...but kills someone"
 hunt_kill_murder_missed: "[murder_target.GetFirstNameOrMeNoTooltip] gets lucky"
 hunt_kill_murder_injured: "[murder_target.GetFirstNameOrMeNoTooltip] is \"accidentally\" wounded"
 hunt_kill_murder_killed: "[murder_target.GetFirstNameOrMeNoTooltip] is \"tragically\" killed"
 hunt_kill_murder_escape: "[murder_target.GetFirstNameOrMeNoTooltip] escapes"
 hunt_kill_success_bow_host: "You fell the [activity.Custom('GetAnimalTypeKill')]"
 hunt_kill_success_bow_guest: "[animal_slayer.GetFirstNameNoTooltip] fells the [activity.Custom('GetAnimalTypeKill')]"
 hunt_kill_failure_bow: "[injury_target.GetFirstNameNoTooltip] is wounded by the [activity.Custom('GetAnimalTypeKill')]"
 hunt_kill_critical_failure_bow: "The [activity.Custom('GetAnimalTypeKill')] escapes"
 hunt_kill_success_bow_tt: "The beast is shot"
 hunt_kill_critical_failure_bow_tt: "The beast escapes"
 hunt_kill_miss_bow_tt: "The arrow misses"
 hunt_quarry_selected_log_title: "Hunt Quarry"
 hunt_quarry_selected_log: "[CHARACTER.GetShortUIName|U] decided the party will be hunting [CHARACTER.GetInvolvedActivity.Custom('GetAnimalArticle')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_chase_method_selected_log_title: "Hunt Method"
 hunt_chase_method_selected_log: "[CHARACTER.GetShortUIName|U] decided to chase and corner the [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_quarry_legendary_log_title: "Hunt Quarry"
 hunt_quarry_legendary_log: "[CHARACTER.GetShortUIName|U] and the party set off after the [CHARACTER.GetInvolvedActivity.Custom('GetLegendaryColor')] [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_quarry_falconry_log_title: "Hunt Quarry"
 hunt_quarry_falconry_log: "[CHARACTER.GetShortUIName|U] and the party set off to find some [CHARACTER.GetInvolvedActivity.Custom('GetAnimalPlural')]"
 hunt_ambush_method_selected_log_title: "$hunt_chase_method_selected_log_title$"
 hunt_ambush_method_selected_log: "[CHARACTER.GetShortUIName|U] decided to lie in wait and ambush the [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_stealth_method_selected_log_title: "$hunt_chase_method_selected_log_title$"
 hunt_stealth_method_selected_log: "[CHARACTER.GetShortUIName|U] decided to sneak up on and surprise the [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_captive_method_selected_log_title: "$hunt_chase_method_selected_log_title$"
 hunt_captive_method_selected_log: "[CHARACTER.GetShortUIName|U] decided to release and hunt [CHARACTER.GetHerHis] captive [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_falconry_method_selected_log_title: "$hunt_chase_method_selected_log_title$"
 hunt_falconry_method_selected_log: "[CHARACTER.GetShortUIName|U] decided to try and hunt [CHARACTER.GetInvolvedActivity.Custom('GetAnimalPlural')] with [CHARACTER.GetHerHis] raptor"
 hunt_rampage_wound_log_title: "Rampaging [CHARACTER.Custom('GetAnimalType')]"
 hunt_rampage_wound_log: "[CHARACTER.GetShortUIName|U] [CHARACTER.GetDeathReason]"
 hunt_rampage_death_log_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_death_log: "[CHARACTER.GetShortUIName|U] [CHARACTER.GetDeathReason]"
 hunt_rampage_fled_log_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_fled_log: "[CHARACTER.GetShortUIName|U] fled a rampaging [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_rampage_frightened_log_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_frightened_log: "[CHARACTER.GetShortUIName|U] frightened away a rampaging [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_rampage_befriend_log_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_befriend_log: "[CHARACTER.GetShortUIName|U] befriended a rampaging [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_rampage_befriend_fail_log_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_befriend_fail_log: "[CHARACTER.GetShortUIName|U] tried and failed to befriend a rampaging [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_rampage_bodyguardlog_title: "$hunt_rampage_wound_log_title$"
 hunt_rampage_bodyguard_log: "[TARGET_CHARACTER.GetShortUIName|U], [TARGET_CHARACTER.GetShortUINamePossessive] bodyguard, saved [CHARACTER.GetHerHim] from a rampaging [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_melee_log_title: "[CHARACTER.Custom('GetAnimalTypeKill')|U] Slain"
 hunt_melee_log: "[CHARACTER.GetShortUIName|U] slew a [CHARACTER.Custom('GetAnimalType')]"
 hunt_melee_wounded_log_title: "[CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')|U] Victim"
 hunt_melee_wounded_log: "[CHARACTER.GetShortUIName|U] gained a wound from a [CHARACTER.GetInvolvedActivity.Custom('GetAnimalTypeKill')]"
 hunt_melee_killed_log_title: "$hunt_melee_wounded_log_title$"
 hunt_melee_killed_log: "[CHARACTER.GetShortUIName|U] was killed by a [CHARACTER.Custom('GetAnimalType')]"
 hunt_melee_group_log_title: "Cornered [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')|U]"
 hunt_melee_group_log: "[CHARACTER.GetShortUIName|U] led the party in slaying a [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_melee_capture_log_title: "$hunt_melee_group_log_title$"
 hunt_melee_capture_log: "[CHARACTER.GetShortUIName|U] led the party in capturing a [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_melee_group_wounded_log_title: "$hunt_melee_wounded_log_title$"
 hunt_melee_group_wounded_log: "[CHARACTER.GetShortUIName|U] gained a wound from a [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_melee_group_killed_log_title: "$hunt_melee_killed_log_title$"
 hunt_melee_group_killed_log: "[CHARACTER.GetShortUIName|U] was killed by a [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_bow_log_title: "Bow Shot"
 hunt_bow_log: "[CHARACTER.GetShortUIName|U] brought down a [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')] with a single arrow"
 hunt_bow_wounded_log_title: "Rampant [CHARACTER.Custom('GetAnimalType')|U]"
 hunt_bow_wounded_log: "[TARGET_CHARACTER.GetShortUIName|U] was wounded by a frantic [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')] when [CHARACTER.GetShortUINamePossessive] arrow missed it"
 hunt_bow_miss_log_title: "[CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')|U] Escapes"
 hunt_bow_miss_log: "[CHARACTER.GetShortUINamePossessive|U] arrow missed a [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')] and it escaped"
 hunt_poachers_punished_log_title: "Poachers Punished"
 hunt_poachers_punished_log: "[CHARACTER.GetShortUIName|U] strung up poachers who had the audacity to hunt on [CHARACTER.GetShortUINamePossessive] land"
 hunt_guest_died_log_title: "Hunting Accident"
 hunt_guest_died_log: "[CHARACTER.GetShortUIName|U] [CHARACTER.GetDeathReason]"
 hunt_guest_injured_log_title: "$hunt_guest_died_log_title$"
 hunt_guest_injured_log: "[CHARACTER.GetShortUIName|U] suffered a hunting accident injury"
 hunt_bird_snatched_log_title: "Bird Snatched"
 hunt_bird_snatched_log: "[CHARACTER.GetShortUIName|U] raptor was itself preyed upon by a bird higher up the food chain"
 hunt_eyas_found_log_title: "Eyas Found"
 hunt_eyas_found_log: "[CHARACTER.GetShortUIName|U] came upon a raptor nest, and found an eyas in the wild"
 hunt_completed_success_log_title: "Hunt Outcome"
 hunt_completed_success_log: "[CHARACTER.GetShortUINamePossessive|U] party slew a [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_completed_failure_log_title: "$hunt_completed_success_log_title$"
 hunt_completed_failure_log: "[CHARACTER.GetShortUINamePossessive|U] party did not slay a [CHARACTER.GetInvolvedActivity.Custom('GetAnimalType')]"
 hunt_tracks_character_title: "[hunter.GetShortUINameNoTooltip|U] Found Tracks"
 hunt_tracks_option_title: "Attendants Flushed Prey"
 hunt_tracks_dog_title: "[hunter.GetShortUINamePossessiveNoTooltip|U] Dog, [hunter.Custom('DogStoryName')], Found the Scent"
 hunt_tracks_building_title: "Well-Maintained Hunting Trails"
 hunt_hunters_bond_title: "[first.GetShortUINameNoTooltip|U] and [second.GetShortUINameNoTooltip] Bonded Over Hunting"
 hunt_dog_bond_title: "[first.GetShortUINameNoTooltip|U] and [second.GetShortUINameNoTooltip] Bonded Over Dogs"
 hunt_knowledge_sharing_title: "[first.GetShortUINameNoTooltip|U] Shared Knowledge with [second.GetShortUINameNoTooltip]"
 hunt_small_game_title: "[hunter.GetShortUINameNoTooltip|U] Hunted a [hunter.Custom('GetRandomRegionalSmallGame')|U]"
 hunt_moh_positive_title: "Skilled [GetCourtPositionType('master_of_hunt_court_position').GetNameNoTooltip()]"
 hunt_moh_negative_title: "Bumbling [GetCourtPositionType('master_of_hunt_court_position').GetNameNoTooltip()]"
 hunt_poetic_inspiration_title: "[poet.GetShortUINameNoTooltip|U] Found Poetic Inspiration"
 hunt_fervor_gain_title: "Awakened [root_scope.GetFaith.GetAdjectiveNoTooltip] Harmony"
 hunt_fervor_gain: "Hunt Awakened Harmony"
 hunt_distinguished_ability_title: "[hunter.GetShortUINamePossessiveNoTooltip|U] Abilities Impressed"
 hunt_annoyed_owner_title: "[first.GetShortUINamePossessiveNoTooltip|U] Resented [second.GetShortUINamePossessiveNoTooltip] Hunt"
 hunt_impressive_grounds_title: "[second.GetShortUINameNoTooltip|U] Admired [first.GetShortUINamePossessiveNoTooltip] Hunting Grounds"
 hunt_eggs_found_title: "[eggman.GetShortUINameNoTooltip|U] Found Raptor Eggs"
 hunt_sighting_standard_desc: "[ROOT.Title.Custom('GetAnimalPlural')|VU] sighted in [ROOT.Title.GetNameNoTier]"
 hunt_sighting_dangerous_desc: "[ROOT.Title.Custom('GetAnimalPlural')|VU] terrorizing [ROOT.Title.GetNameNoTier]"
 hunt_sighting_legendary_desc: "[ROOT.Title.Custom('GetLegendaryColor')|VU] [ROOT.Title.Custom('GetAnimalType')|VU] rumored in [ROOT.Title.GetNameNoTier]"
 hunt_sighting_falconry_desc: "[ROOT.Title.Custom('GetAnimalPlural')|VU] sighted in [ROOT.Title.GetNameNoTier]"
 hunt_completed_host_xp_log_title: "Experience Gained"
 hunt_completed_host_xp_log: "[CHARACTER.GetShortUINamePossessive|U] gained valuable hunting experience"
 animal_type_antelope: "antelope"
 animal_type_antelope_plural: "$animal_type_antelope$"
 animal_type_gazelle: "gazelle"
 animal_type_gazelle_plural: "$animal_type_gazelle$"
 animal_type_roe: "roe"
 animal_type_roe_plural: "deer"
 animal_type_saiga: "saiga"
 animal_type_saiga_plural: "saigas"
 animal_type_reindeer: "reindeer"
 animal_type_reindeer_plural: "$animal_type_reindeer$"
 animal_type_buck: "stag"
 animal_type_buck_plural: "deer"
 animal_type_elk: "elk"
 animal_type_elk_plural: "$animal_type_elk$"
 animal_type_hart_plural: "deer"
 animal_type_zubr: "zubr"
 animal_type_zubr_plural: "zubrs"
 animal_type_wisent: "wisent"
 animal_type_wisent_plural: "wisents"
 animal_type_bison: "bison"
 animal_type_bison_plural: "$animal_type_bison$"
 animal_type_aurochs_plural: "$animal_type_aurochs$"
 animal_type_fox_plural: "foxes"
 animal_type_hare_plural: "hares"
 animal_type_lion_plural: "lions"
 animal_type_tiger_plural: "tigers"
 animal_type_leopard: "leopard"
 animal_type_leopard_plural: "leopards"
 animal_type_boar_plural: "boars"
 animal_type_hyena: "hyena"
 animal_type_hyena_plural: "hyenas"
 animal_type_wolf_plural: "wolves"
 animal_type_lynx_plural: "lynxes"
 animal_type_bear_plural: "bears"
 animal_type_dragon_plural: "dragons"
 animal_type_unicorn_plural: "unicorns"
 animal_type_gorilla: "gorilla"
 animal_type_gorilla_plural: "gorillas"
 animal_type_shape: "shape"
 animal_type_shape_plural: "shapes"
 hunt_animal_male_stag: "buck"
 hunt_animal_male_dog: "dog"
 hunt_animal_male_jack: "jack"
 hunt_animal_male_bull: "bull"
 hunt_animal_male_fallback: "male"
 hunt_animal_female_doe: "doe"
 hunt_animal_female_hind: "hind"
 hunt_animal_female_bitch: "bitch"
 hunt_animal_female_vixen: "vixen"
 hunt_animal_female_jill: "jill"
 hunt_animal_female_cow: "cow"
 hunt_animal_female_sow: "sow"
 hunt_animal_female_lioness: "lioness"
 hunt_animal_female_tigress: "tigress"
 hunt_animal_female_leopardess: "leopardess"
 hunt_animal_female_fallback: "female"
 hunt_animal_child_calf: "calf"
 hunt_animal_child_fawn: "fawn"
 hunt_animal_child_pup: "pup"
 hunt_animal_child_kitten: "kitten"
 hunt_animal_child_leveret: "leveret"
 hunt_animal_child_piglet: "piglet"
 hunt_animal_child_cub: "cub"
 hunt_animal_child_fallback: "child"
 hunt_animal_young_brocket: "brocket"
 hunt_animal_young_squeaker: "squeaker"
 hunt_animal_young_fallback: "juvenile"
 hunt_animal_sound_bark: "bark"
 hunt_animal_sound_bark_present: "barks"
 hunt_animal_sound_bark_participle: "barking"
 hunt_animal_sound_snort: "snort"
 hunt_animal_sound_snort_present: "snorts"
 hunt_animal_sound_snort_participle: "snorting"
 hunt_animal_sound_growl: "growl"
 hunt_animal_sound_growl_present: "growls"
 hunt_animal_sound_growl_participle: "growling"
 hunt_animal_sound_roar: "roar"
 hunt_animal_sound_roar_present: "roars"
 hunt_animal_sound_roar_participle: "roaring"
 hunt_animal_sound_scream: "scream"
 hunt_animal_sound_scream_present: "screams"
 hunt_animal_sound_scream_participle: "screaming"
 hunt_animal_sound_squeal: "squeal"
 hunt_animal_sound_squeal_present: "squeals"
 hunt_animal_sound_squeal_participle: "squealing"
 hunt_animal_sound_squeak: "squeak"
 hunt_animal_sound_squeak_present: "squeaks"
 hunt_animal_sound_squeak_participle: "squeaking"
 hunt_animal_sound_bellow: "bellow"
 hunt_animal_sound_bellow_present: "bellows"
 hunt_animal_sound_bellow_participle: "bellowing"
 hunt_animal_sound_laugh: "laugh"
 hunt_animal_sound_laugh_present: "laughs"
 hunt_animal_sound_laugh_participle: "laughing"
 hunt_animal_sound_howl: "howl"
 hunt_animal_sound_howl_present: "howls"
 hunt_animal_sound_howl_participle: "howling"
 hunt_animal_sound_quack: "quack"
 hunt_animal_sound_quack_present: "quacks"
 hunt_animal_sound_quack_participle: "quacking"
 hunt_animal_sound_honk: "honk"
 hunt_animal_sound_honk_present: "honks"
 hunt_animal_sound_honk_participle: "honking"
 hunt_animal_sound_call: "call"
 hunt_animal_sound_call_present: "calls"
 hunt_animal_sound_call_participle: "calling"
 hunt_animal_group_herd: "herd"
 hunt_animal_group_pack: "pack"
 hunt_animal_group_sloth: "sloth"
 hunt_animal_group_sounder: "sounder"
 hunt_animal_group_skulk: "skulk"
 hunt_animal_group_husk: "husk"
 hunt_animal_group_pride: "pride"
 hunt_animal_group_mustering: "mustering"
 hunt_animal_group_sedge: "sedge"
 hunt_animal_group_siege: "siege"
 hunt_animal_group_stand: "stand"
 hunt_animal_group_pod: "pod"
 hunt_animal_group_gaggle: "gaggle"
 hunt_animal_group_bevy: "bevy"
 hunt_animal_group_raft: "raft"
 hunt_animal_group_wedge: "wedge"
 hunt_animal_group_flock: "flock"
 hunt_animal_group_group: "group"
 hunt_animal_group_herd_plural: "herds"
 hunt_animal_group_pack_plural: "packs"
 hunt_animal_group_sloth_plural: "sloths"
 hunt_animal_group_sounder_plural: "sounders"
 hunt_animal_group_skulk_plural: "skulks"
 hunt_animal_group_husk_plural: "husks"
 hunt_animal_group_pride_plural: "prides"
 hunt_animal_group_mustering_plural: "musterings"
 hunt_animal_group_sedge_plural: "sedges"
 hunt_animal_group_siege_plural: "sieges"
 hunt_animal_group_stand_plural: "stands"
 hunt_animal_group_pod_plural: "pods"
 hunt_animal_group_gaggle_plural: "gaggles"
 hunt_animal_group_bevy_plural: "bevys"
 hunt_animal_group_raft_plural: "rafts"
 hunt_animal_group_wedge_plural: "wedges"
 hunt_animal_group_flock_plural: "flocks"
 hunt_animal_group_group_plural: "groups"
 hunt_animal_danger_antlers: "antlers"
 hunt_animal_danger_horns: "horns"
 hunt_animal_danger_fangs: "fangs"
 hunt_animal_danger_claws: "claws"
 hunt_animal_danger_tusks: "tusks"
 hunt_animal_danger_teeth: "teeth"
 hunt_animal_strike_kick: "kick"
 hunt_animal_strike_kick_present: "kicks"
 hunt_animal_strike_kick_participle: "kicking"
 hunt_animal_strike_buck: "buck"
 hunt_animal_strike_buck_present: "bucks"
 hunt_animal_strike_buck_participle: "bucking"
 hunt_animal_strike_bite: "bite"
 hunt_animal_strike_bite_present: "bites"
 hunt_animal_strike_bite_participle: "biting"
 hunt_animal_strike_swipe: "swipe"
 hunt_animal_strike_swipe_present: "swipes"
 hunt_animal_strike_swipe_participle: "swiping"
 hunt_animal_strike_strike: "strike"
 hunt_animal_strike_strike_present: "strikes"
 hunt_animal_strike_strike_participle: "striking"
 hunt_animal_feature_antlers: "branching antlers"
 hunt_animal_feature_horns: "coiled horns"
 hunt_animal_feature_fangs: "snarling fangs"
 hunt_animal_feature_coat: "shaggy coat"
 hunt_animal_feature_claws: "deadly claws"
 hunt_animal_feature_spots: "spotted coat"
 hunt_animal_feature_stripes: "striped coat"
 hunt_animal_feature_tusks: "sharpened tusks"
 hunt_animal_feature_tail: "flowing tail"
 hunt_animal_feature_mane: "flowing mane"
 hunt_animal_feature_legs: "bounding legs"
 hunt_animal_feature_neck: "elegant neck"
 hunt_animal_feature_bill: "prominent bill"
 hunt_animal_feature_plumage: "speckled plumage"
 hunt_animal_feature_long_legs: "stilt-like legs"
 hunt_animal_charge_bound: "bound"
 hunt_animal_charge_bound_present: "bounds"
 hunt_animal_charge_bound_participle: "bounding"
 hunt_animal_charge_charge: "charge"
 hunt_animal_charge_charge_present: "charges"
 hunt_animal_charge_charge_participle: "charging"
 hunt_animal_charge_lope: "lope"
 hunt_animal_charge_lope_present: "lopes"
 hunt_animal_charge_lope_participle: "loping"
 hunt_animal_charge_hurtle: "hurtle"
 hunt_animal_charge_hurtle_present: "hurtles"
 hunt_animal_charge_hurtle_participle: "hurtling"
 foliage_dense_tree: "dense trees"
 foliage_tree_line: "tree line"
 foliage_tree_specific: "[ROOT.Province.Custom('GetRandomRegionalWood')] trees"
 foliage_farm: "tree line"
 foliage_pine: "sparse pines"
 foliage_palm: "scrawny palms"
 foliage_bush: "leafy bushes"
 foliage_scrub: "spiny scrub"
 foliage_undergrowth: "dense undergrowth"
 foliage_jungle: "shining leaves"
 foliage_reeds: "dancing reeds"
 foliage_grass: "tall grass"
 ground_leaves: "leaves"
 ground_roots: "tree-roots"
 ground_mud: "mud"
 ground_gravel: "gravel"
 ground_sand: "sand"
 ground_rocks: "rocks"
 ground_grass: "grass"
 ground_scrub: "scrub"
 ground_dirt: "dirt"
 weather_blizzard: "blizzard"
 weather_sandstorm: "sandstorm"
 weather_storm: "storm"
 weather_thunderstorm: "thunderstorm"
 weather_downpour: "downpour"
 weather_gale: "gale"
 danger_cliff: "cliff"
 danger_ravine: "ravine"
 danger_rocks: "rocks"
 danger_rock: "rock"
 danger_ledge: "ledge"
 danger_ditch: "ditch"
 danger_slope: "slope"
 danger_bank: "bank"
 danger_brook: "brook"
 danger_fence: "fence"
 danger_wall: "wall"
 danger_bog: "bog"
 terrain_plain: "plain"
 terrain_plain_plural: "$terrain_plains$"
 terrain_hill: "hill"
 terrain_hill_plural: "$terrain_hills$"
 terrain_jungle_plural: "$terrain_jungle$"
 terrain_wetland: "wetland"
 terrain_wetland_plural: "$terrain_wetlands$"
 terrain_floodplain: "floodplain"
 terrain_floodplain_plural: "floodplains"
 terrain_taiga_plural: "$terrain_taiga$"
 terrain_dryland: "dryland"
 terrain_dryland_plural: "drylands"
 terrain_steppe_plural: "$terrain_steppe$"
 terrain_forest_plural: "forests"
 terrain_desert_plural: "$terrain_desert$"
 terrain_farmland: "farmland"
 terrain_farmland_plural: "$terrain_farmlands$"
 terrain_wood: "wood"
 terrain_wood_plural: "woods"
 terrain_grassland: "grassland"
 terrain_grassland_plural: "grasslands"
 terrain_flatland: "flatland"
 terrain_flatland_plural: "flatlands"
 terrain_valley: "valley"
 terrain_valley_plural: "valleys"
 terrain_mountain: "mountain"
 terrain_mountain_plural: "$terrain_mountains$"
 terrain_slope: "slope"
 terrain_slope_plural: "slopes"
 terrain_field: "field"
 terrain_field_plural: "fields"
 terrain_swampland: "swampland"
 terrain_swampland_plural: "swamplands"
 terrain_scrubland: "scrubland"
 terrain_scrubland_plural: "scrublands"
 terrain_highland: "highland"
 terrain_highland_plural: "highlands"
 terrain_woodland: "woodland"
 terrain_woodland_plural: "woodlands"
 terrain_fallback: "wilderness"
 terrain_fallback_plural: "$terrain_fallback$"
 animal_type_stork: "stork"
 animal_type_stork_plural: "storks"
 animal_type_crane: "crane"
 animal_type_crane_plural: "cranes"
 animal_type_heron: "heron"
 animal_type_heron_plural: "herons"
 animal_type_swan: "swan"
 animal_type_swan_plural: "swans"
 animal_type_egret: "egret"
 animal_type_egret_plural: "egrets"
 animal_type_pelican: "pelican"
 animal_type_pelican_plural: "pelicans"
 animal_type_flamingo: "flamingo"
 animal_type_flamingo_plural: "flamingos"
 animal_type_bustard: "bustard"
 animal_type_bustard_plural: "bustards"
 animal_type_pheasant: "pheasant"
 animal_type_pheasant_plural: "pheasants"
 animal_type_goose: "goose"
 animal_type_goose_plural: "geese"
 animal_type_grouse: "grouse"
 animal_type_grouse_plural: "grouse"
 animal_type_duck: "duck"
 animal_type_duck_plural: "ducks"
 animal_type_quail: "quail"
 animal_type_quail_plural: "quails"
 animal_type_eagle: "eagle"
 animal_type_vulture: "vulture"
 animal_type_buzzard: "buzzard"
 animal_type_falcon: "falcon"
 animal_type_falcon_plural: "falcons"
 animal_type_hawk: "hawk"
 animal_type_hawk_plural: "hawks"
 animal_type_raptor: "raptor"
 animal_type_raptor_plural: "raptors"
 hunt_animal_track_hoof: "hoof"
 hunt_animal_track_hoof_plural: "hooves"
 hunt_animal_track_trotter: "trotter"
 hunt_animal_track_trotter_plural: "trotters"
 hunt_animal_track_paw: "paw"
 hunt_animal_track_paw_plural: "paws"
 hunt_martial_gender_female: "Female Attendee"
 hunt_martial_gender_male: "Male Attendee"
 hunt_martial_gender_equal: "Attendee"
 hunt_animal_slayer_memory: "Beast Slain"
 hunt_animal_slayer_memory_desc_host: "I slew a [SCOPE.Custom('GetAnimalType')] on my [GetActivityType('activity_hunt').GetName] in [ROOT.Var('location').Province.GetBaronyNameExplicitly]"
 hunt_animal_slayer_memory_desc: "I slew a [SCOPE.Custom('GetAnimalType')] at [host.GetTitledFirstNamePossessive] [GetActivityType('activity_hunt').GetName] in [ROOT.Var('location').Province.GetBaronyNameExplicitly]"
 hunt_animal_slayer_memory_desc_host_second_perspective: "You slew a [SCOPE.Custom('GetAnimalType')] on your [GetActivityType('activity_hunt').GetName] in [ROOT.Var('location').Province.GetBaronyNameExplicitly]"
 hunt_animal_slayer_memory_desc_second_perspective: "You slew a [SCOPE.Custom('GetAnimalType')] at [host.GetTitledFirstNamePossessive] [GetActivityType('activity_hunt').GetName] in [ROOT.Var('location').Province.GetBaronyNameExplicitly]"
 hunt_animal_slayer_memory_desc_host_third_perspective: "[animal_slayer.GetTitledFirstName] slew a [SCOPE.Custom('GetAnimalType')] at [animal_slayer.GetHerHis] [GetActivityType('activity_hunt').GetName] in [ROOT.Var('location').Province.GetBaronyNameExplicitly]"
 hunt_animal_slayer_memory_desc_third_perspective: "[animal_slayer.GetTitledFirstName] slew a [SCOPE.Custom('GetAnimalType')] at [host.GetTitledFirstNamePossessive] [GetActivityType('activity_hunt').GetName] in [ROOT.Var('location').Province.GetBaronyNameExplicitly]"
 adventurer_3_courtiers: "You need at least #V 3#! [followers|E] capable of hunting"
 activity_huntmaster_desc_adventurer: "[GetCourtPositionType('huntperson_camp_officer').GetNameNoTooltip()]"
 activity_huntmaster_desc_regular: "Master of the Hunt"
 activity_huntmaster_tooltip_desc_adventurer: "[GetCourtPositionType('huntperson_camp_officer').GetName()]"
 activity_huntmaster_tooltip_desc_regular: "[GetCourtPositionType('master_of_hunt_court_position').GetName()]"
 followers_adventurer: "camp followers"
 servants_desc_regular: "servants"
 flushers_adventurer: "flushers"
 gamekeepers_regular: "gamekeepers"
 poacher_opinion: "Poached in #EMP My#! Lands"
