
# v1.5 - original
RegionalDrink = {
	type = character
	random_valid = yes

	text = {
		localization_key = wine
		trigger = {
			faith = {
				NOT = { religion_tag = islam_religion }
			}
			exists = liege
			liege = {
				exists = capital_province
				capital_province = {
					geographical_region = world_europe
				}
			}
		}
	}

	text = {
		localization_key = mead
		trigger = {
			faith = {
				NOT = { religion_tag = islam_religion }
			}
			exists = liege
			liege = {
				exists = capital_province
				capital_province = {
					geographical_region = world_europe_north
				}
			}
		}
	}
	text = {
		localization_key = expensive_drink_spiced_wine_singular
		trigger = {
			faith = {
				NOT = { religion_tag = islam_religion }
			}
		}
	}
	text = {
		localization_key = tea
		trigger = {
			exists = liege
			liege = {
				exists = capital_province
				capital_province = {
					NOT = { geographical_region = world_europe }
				}
			}
		}
	}

	text = {
		localization_key = soma
		trigger = {
			exists = liege
			liege = {
				exists = capital_province
				capital_province = {
					geographical_region = world_india
				}
			}
		}
	}

	text = {
		localization_key = expensive_drink_violet_sharbah
		trigger = {
			OR = {
				faith = {
					religion_tag = islam_religion # As an alternative to alcohol
				}
				AND = {
					exists = liege
					liege = {
						exists = capital_province
						capital_province = {
							OR = {
								geographical_region = world_middle_east
								geographical_region = world_africa_east
								geographical_region = world_africa_north
							}
						}
					}
				}
			}
		}
	}
}

# v1.5
RegionalDrinkGenitive = {
	parent = RegionalDrink
	suffix = "_genitive"
}

# v1.5
RegionalDrinkInstrumental = {
	parent = RegionalDrink
	suffix = "_instrumental"
}


# v1.5 - original
VenomousCreature = {
	type = character

	text = {
		localization_key = venomous_creature_rare_spider
		trigger = {
			scope:venomous_creature = flag:rare_spider #Not Northern Europe or the Steppes
		}
	}

	text = {
		localization_key = venomous_creature_deathstalker
		trigger = {
			scope:venomous_creature = flag:deathstalker #North Africa or Middle East
		}
	}

	text = {
		localization_key = venomous_creature_red_scorpion
		trigger = {
			scope:venomous_creature = flag:red_scorpion #India, Nepal
		}
	}

	text = {
		localization_key = venomous_creature_fat_tail
		trigger = {
			scope:venomous_creature = flag:fat_tail #Arabia, Middle East, Egypt
		}
	}

	text = {
		localization_key = venomous_creature_viper
		trigger = {
			scope:venomous_creature = flag:viper #Northern and Eastern Europe
		}
	}

	text = {
		localization_key = venomous_creature_mamba
		trigger = {
			scope:venomous_creature = flag:mamba #Sub-saharan Africa
		}
	}

	text = {
		localization_key = venomous_creature_boomslang
		trigger = {
			scope:venomous_creature = flag:boomslang #Sub-saharan Africa
		}
	}

	text = {
		localization_key = venomous_creature_king_cobra
		trigger = {
			scope:venomous_creature = flag:king_cobra #South-east Asia + India
		}
	}

	text = {
		localization_key = venomous_creature_daboia
		trigger = {
			scope:venomous_creature = flag:daboia #India
		}
	}

	text = {
		localization_key = venomous_creature_saw_scale
		trigger = {
			scope:venomous_creature = flag:saw_scale #North Africa, Middle East, Pakistan, India
		}
	}

	text = {
		localization_key = venomous_creature_krait
		trigger = {
			scope:venomous_creature = flag:krait #North Africa, Middle East, Pakistan, India
		}
	}

	text = {
		localization_key = venomous_creature_beaked_mammal
		trigger = {
			scope:venomous_creature = flag:beaked_mammal #Australia
		}
	}

	text = {
		localization_key = venomous_creature_snake
		trigger = {
			always = no
		}
		fallback = yes
	}
}

# v1.5
VenomousCreatureAdj = {
	parent = VenomousCreature
	suffix = "_adj"
}

# v1.5
VenomousCreatureAdj1 = {
	parent = VenomousCreature
	suffix = "_adj1"
}

# v1.5 - original
TerrainType = {
	type = character

	text = {	
		trigger = { capital_province = { terrain = plains } }
		localization_key = terrain_plains
	}

	text = {	
		trigger = { capital_province = { terrain = farmlands } }
		localization_key = terrain_farmlands
	}

	text = {	
		trigger = { capital_province = { terrain = hills } }
		localization_key = terrain_hills
	}

	text = {	
		trigger = {
			capital_province = {
				OR = {
					terrain = mountains
					terrain = desert_mountains
				}
			}
		}
		localization_key = terrain_mountains
	}

	text = {	
		trigger = { capital_province = { terrain = desert } }
		localization_key = terrain_desert
	}

	text = {	
		trigger = { capital_province = { terrain = oasis } }
		localization_key = terrain_oasis
	}

	text = {	
		trigger = { capital_province = { terrain = jungle } }
		localization_key = terrain_jungle
	}

	text = {	
		trigger = { capital_province = { terrain = forest } }
		localization_key = terrain_forest
	}

	text = {	
		trigger = { capital_province = { terrain = taiga } }
		localization_key = terrain_taiga
	}

	text = {	
		trigger = { capital_province = { terrain = wetlands } }
		localization_key = terrain_wetlands
	}

	text = {	
		trigger = { capital_province = { terrain = steppe } }
		localization_key = terrain_steppe
	}

	text = {	
		trigger = { capital_province = { terrain = floodplains } }
		localization_key = terrain_floodplains
	}

	text = {	
		trigger = { capital_province = { terrain = drylands } }
		localization_key = terrain_drylands
	}
}

# v1.5
TerrainTypeDop = {
	parent = TerrainType
	suffix = "_dop"
}

# v1.5
TerrainTypeBier = {
	parent = TerrainType
	suffix = "_bier"
}

# v1.5
TerrainTypeInMie = {
	parent = TerrainType
	suffix = "_in_mie"
}


# v1.5
TerrainTypeCountyScopeBier = {
	type = landed_title

	text = {	
		trigger = { title_province = { terrain = plains } }
		localization_key = terrain_plains_bier
	}

	text = {	
		trigger = { title_province = { terrain = farmlands } }
		localization_key = terrain_farmlands_bier
	}

	text = {	
		trigger = { title_province = { terrain = hills } }
		localization_key = terrain_hills_bier
	}

	text = {	
		trigger = {
			title_province = {
				OR = {
					terrain = mountains
					terrain = desert_mountains
				}
			}
		}
		localization_key = terrain_mountains_bier
	}

	text = {	
		trigger = { title_province = { terrain = desert } }
		localization_key = terrain_desert_bier
	}

	text = {	
		trigger = { title_province = { terrain = oasis } }
		localization_key = terrain_oasis_bier
	}

	text = {	
		trigger = { title_province = { terrain = jungle } }
		localization_key = terrain_jungle_bier
	}

	text = {	
		trigger = { title_province = { terrain = forest } }
		localization_key = terrain_forest_bier
	}

	text = {	
		trigger = { title_province = { terrain = taiga } }
		localization_key = terrain_taiga_bier
	}

	text = {	
		trigger = { title_province = { terrain = wetlands } }
		localization_key = terrain_wetlands_bier
	}

	text = {	
		trigger = { title_province = { terrain = steppe } }
		localization_key = terrain_steppe_bier
	}

	text = {	
		trigger = { title_province = { terrain = floodplains } }
		localization_key = terrain_floodplains_bier
	}

	text = {	
		trigger = { title_province = { terrain = drylands } }
		localization_key = terrain_drylands_bier
	}
}

# v1.5 - original
LocalAnimal = {
	type = character

	text = {
		localization_key = animal_hart
		trigger = {
			var:local_animal = flag:hart
		}
		fallback = yes
	}

	text = {
		localization_key = animal_stag
		trigger = {
			var:local_animal = flag:stag
		}
	}

	text = {
		localization_key = animal_boar
		trigger = {
			var:local_animal = flag:boar
		}
	}

	text = {
		localization_key = animal_wolf
		trigger = {
			var:local_animal = flag:wolf
		}
	}

	text = {
		localization_key = animal_fox
		trigger = {
			var:local_animal = flag:fox
		}
	}

	text = {
		localization_key = animal_hare
		trigger = {
			var:local_animal = flag:hare
		}
	}

	text = {
		localization_key = animal_lion
		trigger = {
			var:local_animal = flag:lion
		}
	}

	text = {
		localization_key = animal_tiger
		trigger = {
			var:local_animal = flag:tiger
		}
	}

	text = {
		localization_key = animal_bear
		trigger = {
			var:local_animal = flag:bear
		}
	}

	text = {
		localization_key = animal_lynx
		trigger = {
			var:local_animal = flag:lynx
		}
	}

	text = {
		localization_key = animal_unicorn
		trigger = {
			var:local_animal = flag:unicorn
		}
	}

	text = {
		localization_key = animal_dragon
		trigger = {
			var:local_animal = flag:dragon
		}
	}
}

# v1.5
LocalAnimalDop = {
	parent = LocalAnimal
	suffix = "_dop"
}


# Nazwy rezydencji - dopełniacz, miejscownik

# v1.5
ResidenceBuildingDop = { #Castle, Palace, etc.
	type = character

	text = {
		trigger = {
			has_government = republic_government
		}
		localization_key = mansion_dop
	}

	text = {
		trigger = {
			OR = {
				has_government = theocracy_government
				is_theocratic_lessee = yes
			}
		}
		localization_key = temple_dop
	}

	text = {
		trigger = {
			NOR = {
				has_government = republic_government
				has_government = theocracy_government
				is_theocratic_lessee = yes
			}
		}
		localization_key = castle_dop
		fallback = yes
	}
}

# v1.5 - original
GetExpensiveDrink_Singular = {
	type = character

	random_valid = yes

	text = {
		trigger = {
			faith = {
				NOT = { religion_tag = islam_religion }
			}
			exists = liege
			liege = {
				exists = capital_province
				capital_province = {
					OR = {
						geographical_region = world_europe_west
						geographical_region = world_europe_south
					}
				}
			}
		}
		localization_key = expensive_drink_singular_hippocras
	}
	text = {
		trigger = {
			faith = {
				NOT = { religion_tag = islam_religion }
			}
			exists = liege
			liege = {
				exists = capital_province
				capital_province = {
					OR = {
						geographical_region = world_europe_west_francia
						geographical_region = world_europe_west_britannia
					}
				}
			}
		}
		localization_key = expensive_drink_singular_bordeaux_claret
	}
	text = {
		trigger = {
			faith = {
				NOT = { religion_tag = islam_religion }
			}
			exists = liege
			liege = {
				exists = capital_province
				capital_province = {
					geographical_region = world_europe_north
				}
			}
		}
		localization_key = expensive_drink_singular_imported_wine
	}
	text = {
		trigger = {
			faith = {
				NOT = { religion_tag = islam_religion }
			}
			current_date > 1400.1.1 #first mention of brandy is in 1437
		}
		localization_key = expensive_drink_singular_brandy
	}
	text = {
		localization_key = expensive_drink_singular_spiced_wine
		trigger = {
			faith = {
				NOT = { religion_tag = islam_religion }
			}
		}
	}
	text = {
		localization_key = expensive_drink_singular_premium_tea
		trigger = {
			exists = liege
			liege = {
				exists = capital_province
				capital_province = {
					NOT = { geographical_region = world_europe }
				}
			}
		}
	}
	text = {
		localization_key = expensive_drink_invigorating_herbal_infusions
		trigger = {
			always = yes
		}
	}
	text = {
		localization_key = expensive_drink_singular_violet_sharbah
		trigger = {
			OR = {
				faith = {
					religion_tag = islam_religion # As an alternative to alcohol
				}
				AND = {
					exists = liege
					liege = {
						exists = capital_province
						capital_province = {
							OR = {
								geographical_region = world_middle_east
								geographical_region = world_africa_east
								geographical_region = world_africa_north
							}
						}
					}
				}
			}
		}
	}
}

# v1.5
GetExpensiveDrink_SingularBier = {
	parent = GetExpensiveDrink_Singular
	suffix = "_bier"
}


# v1.5 - original
FortifiedBuilding = {
	type = character

	text = {
		trigger = {
			culture = { has_cultural_pillar = language_arabic }
		}
		localization_key = kasbah
	}

	text = {
		trigger = {
			culture = { has_cultural_pillar = heritage_indo_aryan }
		}
		localization_key = durga
	}

	text = {
		trigger = {
			culture = { has_cultural_pillar = language_greek }
		}
		localization_key = kastron
	}

	text = {
		trigger = { has_government = tribal_government }
		localization_key = stronghold
	}

	text = {
		trigger = { always = no }
		localization_key = castle
		fallback = yes
	}
}

# v1.5
FortifiedBuildingGenitive = {
	parent = FortifiedBuilding
	suffix = "_genitive"
}

# v1.5
FortifiedBuildingLocative = {
	parent = FortifiedBuilding
	suffix = "_locative"
}

# v1.5
FortifiedBuildingAccusative = {
	parent = FortifiedBuilding
	suffix = "_accusative"
}

# v1.5
FortifiedBuildingMy = {
	parent = FortifiedBuilding
	suffix = "_my"
}